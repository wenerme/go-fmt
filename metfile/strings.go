// Code generated by "stringer -type=TagCode,TagValueType -output=strings.go"; DO NOT EDIT.

package metfile

import "strconv"

const (
	_TagCode_name_0 = "TagCodeServerName"
	_TagCode_name_1 = "TagCodeDescriptionTagCodePingTagCodeFailTagCodePreference"
	_TagCode_name_2 = "TagCodeDNS"
	_TagCode_name_3 = "TagCodeMaxUsersTagCodeSoftFilesTagCodeHardFiles"
	_TagCode_name_4 = "TagCodeLastPingTagCodeVersionTagCodeUDPFlagsTagCodeAuxiliaryPortsListTagCodeLowIDClients"
)

var (
	_TagCode_index_1 = [...]uint8{0, 18, 29, 40, 57}
	_TagCode_index_3 = [...]uint8{0, 15, 31, 47}
	_TagCode_index_4 = [...]uint8{0, 15, 29, 44, 69, 88}
)

func (i TagCode) String() string {
	switch {
	case i == 1:
		return _TagCode_name_0
	case 11 <= i && i <= 14:
		i -= 11
		return _TagCode_name_1[_TagCode_index_1[i]:_TagCode_index_1[i+1]]
	case i == 133:
		return _TagCode_name_2
	case 135 <= i && i <= 137:
		i -= 135
		return _TagCode_name_3[_TagCode_index_3[i]:_TagCode_index_3[i+1]]
	case 144 <= i && i <= 148:
		i -= 144
		return _TagCode_name_4[_TagCode_index_4[i]:_TagCode_index_4[i+1]]
	default:
		return "TagCode(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}

const _TagValueType_name = "TagValueTypeStringTagValueTypeUint32"

var _TagValueType_index = [...]uint8{0, 18, 36}

func (i TagValueType) String() string {
	i -= 2
	if i >= TagValueType(len(_TagValueType_index)-1) {
		return "TagValueType(" + strconv.FormatInt(int64(i+2), 10) + ")"
	}
	return _TagValueType_name[_TagValueType_index[i]:_TagValueType_index[i+1]]
}
